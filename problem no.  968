/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int cameraCover = 0;
    public int minCameraCover(TreeNode root) {
        return def(root) == 0 ? cameraCover +1 : cameraCover;
    }
    private int def(TreeNode node){
        if(node == null) return 1;
        int left = def(node.left);
        int right = def(node.right);
        if(left == 0 || right == 0){
            cameraCover++;
            return 2;
        }else if(left == 2 || right == 2){
            return 1;
        }else{
            return 0;
        }
        


    }
}
